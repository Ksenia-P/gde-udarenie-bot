'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var debug = require('debug')('AbstractEnvironment');

/* eslint-disable no-unused-vars,class-methods-use-this */

var AbstractEnvironment = function () {
  function AbstractEnvironment(options) {
    (0, _classCallCheck3.default)(this, AbstractEnvironment);

    debug('Initializing...');

    this._errbacks = [];
    this._options = options;
  }

  (0, _createClass3.default)(AbstractEnvironment, [{
    key: 'getOptions',
    value: function getOptions() {
      return this._options;
    }
  }, {
    key: 'addErrBack',
    value: function addErrBack(errback) {
      this._errbacks.push(errback);
    }
  }, {
    key: 'removeErrBack',
    value: function removeErrBack(errback) {
      this._errbacks = this._errbacks.filter(function (e) {
        return e !== errback;
      });
    }

    /**
     * Prepare environment
     * @returns {Promise}
     */

  }, {
    key: 'prepare',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                debug('Preparing...');
                return _context.abrupt('return', _promise2.default.resolve());

              case 2:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function prepare() {
        return _ref.apply(this, arguments);
      }

      return prepare;
    }()

    /**
     * Tear down environment
     * @returns {Promise}
     */

  }, {
    key: 'tearDown',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                debug('Tear down...');
                return _context2.abrupt('return', _promise2.default.resolve());

              case 2:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function tearDown() {
        return _ref2.apply(this, arguments);
      }

      return tearDown;
    }()

    /**
     * EvaluateJs in the environment
     * @returns {Promise}
     */

  }, {
    key: 'evaluateJs',
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee3() {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                throw new Error('You must redefine evaluateJs method in child environment');

              case 1:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function evaluateJs() {
        return _ref3.apply(this, arguments);
      }

      return evaluateJs;
    }()

    /**
     * Take a snapshot
     * @returns {Promise}
     */

  }, {
    key: 'snapshot',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee4() {
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                throw new Error('Current environment does not support snapshots');

              case 1:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function snapshot() {
        return _ref4.apply(this, arguments);
      }

      return snapshot;
    }()

    /**
     * Wait for page load
     * @param {number} timeout
     * @returns {Promise}
     */

  }, {
    key: 'waitForPage',
    value: function () {
      var _ref5 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee5(timeout) {
        return _regenerator2.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                throw new Error('You must redefine waitForPage method in child environment');

              case 1:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function waitForPage(_x) {
        return _ref5.apply(this, arguments);
      }

      return waitForPage;
    }()
  }, {
    key: 'waitForQuery',
    value: function () {
      var _ref6 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee6(uri, timeout) {
        return _regenerator2.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                throw new Error('You must redefine waitForQuery method in child environment');

              case 1:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function waitForQuery(_x2, _x3) {
        return _ref6.apply(this, arguments);
      }

      return waitForQuery;
    }()
  }, {
    key: 'back',
    value: function () {
      var _ref7 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee7() {
        return _regenerator2.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                throw new Error('You must redefine back method in child environment');

              case 1:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));

      function back() {
        return _ref7.apply(this, arguments);
      }

      return back;
    }()
  }, {
    key: 'mouseDown',
    value: function () {
      var _ref8 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee8() {
        return _regenerator2.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                throw new Error('You must redefine mouseDown method in child environment');

              case 1:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function mouseDown() {
        return _ref8.apply(this, arguments);
      }

      return mouseDown;
    }()
  }, {
    key: 'mouseUp',
    value: function () {
      var _ref9 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee9() {
        return _regenerator2.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                throw new Error('You must redefine mouseUp method in child environment');

              case 1:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function mouseUp() {
        return _ref9.apply(this, arguments);
      }

      return mouseUp;
    }()
  }, {
    key: 'mouseClick',
    value: function () {
      var _ref10 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee10() {
        return _regenerator2.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                throw new Error('You must redefine mouseClick method in child environment');

              case 1:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function mouseClick() {
        return _ref10.apply(this, arguments);
      }

      return mouseClick;
    }()
  }, {
    key: 'mouseMove',
    value: function () {
      var _ref11 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee11() {
        return _regenerator2.default.wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                throw new Error('You must redefine mouseMove method in child environment');

              case 1:
              case 'end':
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));

      function mouseMove() {
        return _ref11.apply(this, arguments);
      }

      return mouseMove;
    }()

    /**
     * Get vendor file paths
     *
     * @return {Array.<String>}
     * @protected
     */

  }, {
    key: '_getVendors',
    value: function _getVendors() {
      return [require.resolve('../vendor/sizzle.min.js'), require.resolve('../vendor/xhr.sniffer.js')];
    }
  }]);
  return AbstractEnvironment;
}();

module.exports = AbstractEnvironment;